/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.inventoryitemsproject;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ray_g
 */
public class InventoryItemsMain extends javax.swing.JFrame {
    
    List<Item> item = new ArrayList<>();
    TableRowSorter<TableFunctionalities> tableRowSorter = new TableRowSorter<>();

    /**
     * Creates new form InventoryItemsMain
     */
    public InventoryItemsMain() {
        initComponents();
        readFile();
        initObjects();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panela = new javax.swing.JPanel();
        lblItem = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblLot = new javax.swing.JLabel();
        fldItem = new javax.swing.JTextField();
        fldPrice = new javax.swing.JTextField();
        fldLot = new javax.swing.JTextField();
        ScpItem = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        fldSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panela.setBackground(new java.awt.Color(230, 235, 224));
        panela.setLayout(null);

        lblItem.setBackground(new java.awt.Color(0, 0, 0));
        lblItem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblItem.setForeground(new java.awt.Color(0, 0, 0));
        lblItem.setText("Item Name");
        panela.add(lblItem);
        lblItem.setBounds(40, 50, 90, 17);

        lblPrice.setBackground(new java.awt.Color(0, 0, 0));
        lblPrice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(0, 0, 0));
        lblPrice.setText("Price");
        panela.add(lblPrice);
        lblPrice.setBounds(180, 50, 36, 17);

        lblLot.setBackground(new java.awt.Color(0, 0, 0));
        lblLot.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblLot.setForeground(new java.awt.Color(0, 0, 0));
        lblLot.setText("Lot");
        panela.add(lblLot);
        lblLot.setBounds(280, 50, 22, 17);
        panela.add(fldItem);
        fldItem.setBounds(14, 80, 120, 22);
        panela.add(fldPrice);
        fldPrice.setBounds(160, 80, 70, 22);
        panela.add(fldLot);
        fldLot.setBounds(260, 80, 70, 22);

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        ScpItem.setViewportView(tblItem);

        panela.add(ScpItem);
        ScpItem.setBounds(380, 50, 300, 400);

        lblSearch.setBackground(new java.awt.Color(0, 0, 0));
        lblSearch.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(0, 0, 0));
        lblSearch.setText("Search");
        panela.add(lblSearch);
        lblSearch.setBounds(20, 420, 50, 17);
        panela.add(fldSearch);
        fldSearch.setBounds(80, 420, 170, 22);

        btnSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 0, 0));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        panela.add(btnSearch);
        btnSearch.setBounds(260, 420, 90, 24);

        btnAdd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        panela.add(btnAdd);
        btnAdd.setBounds(60, 130, 90, 24);

        btnRemove.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(0, 0, 0));
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        panela.add(btnRemove);
        btnRemove.setBounds(180, 130, 90, 24);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panela, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panela, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        // create a new instance of item
        Item pr = new Item();  
        TableFunctionalities itemModel = (TableFunctionalities) this.tblItem.getModel(); 
        pr.setName(fldItem.getText());  
        
        //Exception handling when entering values in textfields
        try {
            pr.setPrice(Double.parseDouble(fldPrice.getText()));      
            pr.setLot(Integer.parseInt(fldLot.getText()));      
        } catch (NumberFormatException e) {
            System.out.println("Error: the format of price or lot is invalid bro"); 
            return;  
        }
        
        //Exception handling , only positive values in the textfield
        try {
            double price = Double.parseDouble(fldPrice.getText());  
            int lot = Integer.parseInt(fldLot.getText());   
            if (price <= 0 || lot <= 0) {  
                throw new IllegalArgumentException("Error: only can write positives values for the lot or the price bro."); 
            }
            pr.setPrice(price);   
            pr.setLot(lot);  
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());  
            return;  
        }

        itemModel.addItem(pr);  
        clearFields();  

        saveItems();  
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        RowFilter<TableFunctionalities, Integer> rowFilter = RowFilter.regexFilter(fldSearch.getText(), 0);  
        tableRowSorter.setRowFilter(rowFilter); 
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblItem.getSelectedRow();

        
        if (selectedRow != -1) {
            
            TableFunctionalities productInvTable = (TableFunctionalities) tblItem.getModel();

            
            int modelRowIndex = tblItem.convertRowIndexToModel(selectedRow);

            
            productInvTable.removeItem(modelRowIndex);

            
            saveItems();
        } else {
            
            JOptionPane.showMessageDialog(this, "Please select a row to remove.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryItemsMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryItemsMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryItemsMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryItemsMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryItemsMain().setVisible(true);
            }
        });
    }
    
    // method for clean the formulary
    private void clearFields() {
        fldItem.setText("");  
        fldPrice.setText("");   
        fldLot.setText("");    
    }

// method for inicialice the objets of the table
    private void initObjects() {
        TableFunctionalities model = new TableFunctionalities(this.item); 
        tableRowSorter = new TableRowSorter<>(model);  
        tblItem.setRowSorter(tableRowSorter);  
        tblItem.setModel(model);  
    }

// Method for save the items in a json file
    private void saveItems() {
        Gson gson = new GsonBuilder().create();  
        String json = gson.toJson(this.item);  
        
        //exception handling of any write errors

        try (FileWriter fileWriter = new FileWriter("ItemsInventory.json")) {  
            fileWriter.write(json);  
            fileWriter.close();  
            System.out.println("The list of items has been successfully saved in the inventory");  
        } catch (IOException e) {  
            System.err.println("An error occurred while saving the list to the json fill: " + e.getMessage());  
        }
    }

// Method to read the list of products from a JSON file
    private void readFile() {
        //exception handling to any read error
        try {
            Gson gson = new GsonBuilder().create();  
            FileReader fileReader = new FileReader("ItemsInventory.json"); 

            java.lang.reflect.Type typeListItems = new TypeToken<List<Item>>() {
            }.getType();  

            this.item = gson.fromJson(fileReader, typeListItems);  
        } catch (IOException e) {  
            System.err.println("An error occurred while reading the list to the json fill: " + e.getMessage());  
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScpItem;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextField fldItem;
    private javax.swing.JTextField fldLot;
    private javax.swing.JTextField fldPrice;
    private javax.swing.JTextField fldSearch;
    private javax.swing.JLabel lblItem;
    private javax.swing.JLabel lblLot;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel panela;
    private javax.swing.JTable tblItem;
    // End of variables declaration//GEN-END:variables
}
